package com.myself.misc.watercollector

import com.myself.BaseTest
import spock.lang.Subject

class WatercollectorTests extends BaseTest {

    @Subject
    Watercollector service = new Watercollector()

    def 'test watercollector'() {
        when:
        def result = service.howMuchWaterIsCollected(arr)

        then:
        result == expectedResult
        where:
        arr                                                             || expectedResult
        [1, 0, 1]                                                       || 1
        [5, 3, 7, 2, 6, 4, 5, 9, 1, 2]                                  || 14
        [0, 1, 0, 2, 1, 0, 1, 4, 2, 1, 2, 1, 3, 1, 2]                   || 12
        [2, 1, 3, 1, 2]                                                 || 2
        [2, 1, 3, 3, 3, 1, 2]                                           || 2
        [2, 1, 3, 4, 3, 1, 2]                                           || 2
        [2, 1, 3, 4, 3, 1, 2, 4]                                        || 7
        [5, 5, 0]                                                       || 0
        [5]                                                             || 0
        [1, 5]                                                          || 0
        [1, 5, 1, 5, 1]                                                 || 4
        [1, 1, 1, 1, 1, 1, 1, 1]                                        || 0
        [1, 0, 1, 2, 1, 2, 1, 0, 1]                                     || 3
        [1, 0, 1, 2, 1, 3, 0, 1, 0, 1, 2]                               || 8
        [3, 0, 2, 0, 2, 1, 0, 1]                                        || 5
        [3, 0, 2, 0, 2, 1, 0, 1, 2]                                     || 8
        [3, 0, 2, 0, 2, 1, 0, 1, 3]                                     || 15
        [0, 1, 0, 2, 1, 0, 1, 3, 2, 1, 2, 1]                            || 6
        [4, 1, 2, 1, 3, 1, 2, 4, 1, 3, 1, 4, 1]                         || 21
        [4, 1, 2, 1, 3, 1, 2, 4, 1, 3, 1, 4, 1, 0]                      || 21
        [1, 0, 4, 1, 2, 1, 3, 1, 2, 4, 1, 3, 1, 4, 1, 0]                || 22
        [1, 0, 4, 0, 0, 0, 0, 0, 3, 0, 0, 3]                            || 22
        [1, 0, 0, 4, 0, 0, 0, 0, 0, 3, 0, 0, 3]                         || 23
        [1, 0, 1, 4, 0, 0, 0, 0, 0, 3, 0, 0, 3]                         || 22
        [5, 4, 0, 0, 0, 0, 0, 3, 0, 0, 3]                               || 21
        [1, 2, 3]                                                       || 0
        [2, 1, 3]                                                       || 1
        [4, 1, 3]                                                       || 2
        [4, 1, 4]                                                       || 3
        [0, 1, 0, 2, 1, 0, 1, 4, 2, 1, 2, 1, 3, 1, 2, 0, 1]             || 13
        [0, 1, 0, 2, 1, 0, 1, 4, 2, 1, 2, 1, 3, 1, 0, 0, 2]             || 16
        [0, 1, 0, 2, 1, 0, 1, 4, 2, 1, 2, 1, 3, 1, 0, 0, 3]             || 19
        [0, 1, 0, 2, 1, 0, 1, 4, 2, 1, 2, 1, 3, 1, 0, 0, 2, 0, 0, 1]    || 18
        [3, 1, 2, 1, 2, 1, 3]                                           || 8
        [3, 1, 2, 1, 2, 1, 3, 0, 0, 3]                                  || 14
        [3, 1, 2, 1, 2, 1, 3, 0, 2, 0, 1, 2, 3, 0, 1]                   || 19
        [2, 0, 1, 0, 3, 1, 2, 1, 2, 1, 3, 0, 2, 0, 1, 2, 3, 0, 1]       || 24
        [0, 1, 0, 2, 1, 0, 1, 4, 2, 1, 2, 1, 3, 1, 2, 0, 1, 0, 2, 0, 1] || 18
        [0, 1, 0, 2, 1, 0, 1, 4, 2, 1, 2, 1, 3, 1, 2, 0, 1, 0, 1, 0, 1] || 15
    }
}
